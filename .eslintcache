[{"/home/peter/projects/image-repo/image-repo-client/src/components/ImageTableRow.js":"1","/home/peter/projects/image-repo/image-repo-client/src/index.js":"2","/home/peter/projects/image-repo/image-repo-client/src/components/Pagination.js":"3","/home/peter/projects/image-repo/image-repo-client/src/components/UploadImageButton.js":"4","/home/peter/projects/image-repo/image-repo-client/src/components/LogoutButton.js":"5","/home/peter/projects/image-repo/image-repo-client/src/components/Dashboard.js":"6","/home/peter/projects/image-repo/image-repo-client/src/components/DeleteImageButton.js":"7","/home/peter/projects/image-repo/image-repo-client/src/components/DownloadImageButton.js":"8","/home/peter/projects/image-repo/image-repo-client/src/components/DeleteManyImageButton.js":"9"},{"size":7750,"mtime":1610826373194,"results":"10","hashOfConfig":"11"},{"size":774,"mtime":1610775416484,"results":"12","hashOfConfig":"11"},{"size":1622,"mtime":1610602986015,"results":"13","hashOfConfig":"11"},{"size":5485,"mtime":1610775423972,"results":"14","hashOfConfig":"11"},{"size":407,"mtime":1610506413026,"results":"15","hashOfConfig":"11"},{"size":11101,"mtime":1610851704458,"results":"16","hashOfConfig":"11"},{"size":1639,"mtime":1610826802961,"results":"17","hashOfConfig":"11"},{"size":2326,"mtime":1610826719667,"results":"18","hashOfConfig":"11"},{"size":2054,"mtime":1610825952342,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"1hetil5",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/peter/projects/image-repo/image-repo-client/src/components/ImageTableRow.js",["42","43","44"],"import React, { useEffect, useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport axios from 'axios';\nimport DownloadImageButton from './DownloadImageButton';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport MoreOptionsButton from \"./MoreOptionsButton\";\nimport DeleteImageButton from './DeleteImageButton';\n\nconst ImageTableRow = (props) => {\n\n    const { image, handleCheckButtonChange, isChecked, updatePermissions, updateFlag, setUpdateFlag } = props;\n    const { getAccessTokenSilently } = useAuth0();\n\n    const [showPreview, setShowPreview] = useState(false);\n    const [imagePreviewUrl, setImagePreviewUrl] = useState(null);\n\n    const [updatingPermissions, setUpdatingPermissions] = useState(false)\n\n    useEffect(() => {\n        getImagePreview();\n    }, [image.private]);\n\n    const getImagePreview = async () => {\n        const token = await getAccessTokenSilently();\n        \n        // Send get request to api with s3 object key to get image URL\n        axios.get(process.env.REACT_APP_API_URL + '/api/v1/images/' + image.id, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        })\n        .then((response) => {\n            // If successful, return image url\n            console.log(response);\n\n            setImagePreviewUrl(response.data.url);\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n    }\n\n    const handleClick = (e) => {\n        e.preventDefault();\n        if(e.target.id === \"close\") {\n            setShowPreview(false);\n        } else {\n            setShowPreview(true);\n            if(imagePreviewUrl === null) {\n                getImagePreview();\n            }\n        }\n    }\n\n    const formattedDate = (datetime) => {\n        var months = ['January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'];\n\n        var date = new Date(datetime);\n        let formattedMonth = months[date.getMonth()];\n        let formattedDay = (\"0\" + date.getDate()).slice(-2);\n        let year = date.getFullYear();\n\n        return `${formattedMonth} ${formattedDay}, ${year}`\n    }\n\n    const handleCheckButtonClick = (e) => {\n        e.stopPropagation();\n    }\n\n    const updatePermissionsSetting = (e) => {\n        e.stopPropagation();\n        console.log(image.private);\n        setUpdatingPermissions(true);\n        updatePermissions(image);\n    }\n\n    return (\n        <tr onClick={handleClick} class=\"transition-all hover:bg-gray-200 hover:shadow-lg cursor-pointer\">\n            <td class=\"px-6 py-4 whitespace-nowrap\">\n                <div class=\"flex items-center\">\n                    <div class=\"flex flex-col items-center\">\n                        <input type=\"checkbox\" checked={isChecked} onClick={handleCheckButtonClick} onChange={() => handleCheckButtonChange(image.id)}></input>\n                    </div>\n                    <div class=\"ml-4\">\n                        <div class=\"text-sm font-medium text-gray-700\">{image.filename}</div>\n                    </div>\n                </div>\n            </td>\n            <td class=\"px-6 py-4 whitespace-nowrap\">\n                <div class=\"text-sm text-gray-500 uppercase\">{image.filetype}</div>\n            </td>\n            <td class=\"px-6 py-4 whitespace-nowrap\">\n                { image.private ? (\n                    <span onClick={updatePermissionsSetting}\n                    class=\"inline-flex px-2 text-xs font-semibold leading-5 text-indigo-800 bg-indigo-100 rounded-full capitalize hover:bg-indigo-300\"\n                    >\n                    Private\n                    </span>\n                ) :\n                (\n                    <span onClick={updatePermissionsSetting}\n                    class=\"inline-flex px-2 text-xs font-semibold leading-5 text-green-800 bg-green-100 rounded-full capitalize hover:bg-green-300\"\n                    >\n                    Public\n                    </span>\n                )\n                }\n                \n            </td>\n            <td class=\"px-6 py-4 text-sm text-gray-500 whitespace-nowrap\">{formattedDate(image.created_at)}</td>\n            <td class=\"px-6 py-4 text-sm font-medium text-right whitespace-nowrap\">\n                <div class=\"flex flex-row justify-end\">\n                    <DownloadImageButton imageId={image.id} />\n                </div>\n            </td>\n            { showPreview &&\n                <div>\n                    <div class=\"justify-center items-center flex overflow-x-hidden h-3/4 overflow-y-auto fixed inset-x-0 top-20 z-50 bg-gray-200 bg-opacity-60\">\n                        <main class=\"container mx-auto max-w-screen-lg h-full border-2 border-gray-500 rounded-lg\">\n                        <article aria-label=\"File Upload Modal\" class=\"relative h-full flex flex-col bg-white shadow-xl rounded-md\">\n                            <header class=\"pt-12 px-8 flex flex-row justify-between items-center\">\n                                <h2 class=\"text-2xl font-semibold whitespace-nowrap\">\n                                   {image.filename} \n                                </h2>\n                                <h2 class=\"text-l font-semibold whitespace-nowrap\">\n                                    {formattedDate(image.created_at)}\n                                </h2>\n                            </header>\n                            <section class=\"h-full overflow-auto p-8 w-full h-full flex flex-col\">\n                            <ul class=\"flex flex-1 justify-center\">\n                                <img src={imagePreviewUrl} alt={image.filename} class=\"object-contain md:object-scale-down\"></img>\n                            </ul>\n                            </section>\n                \n                            <footer class=\"flex justify-end px-8 pb-8 pt-4\">\n                                { !image.private &&\n                                <CopyToClipboard text={imagePreviewUrl}>\n                                    <button id=\"copy-link\" class='text-indigo-600 color-indigo-600 border-2 border-white hover:text-indigo-900 font-bold py-2 px-4 mr-2 rounded items-center focus:outline-none hover:border-indigo-800'>\n                                        <div class=\"flex flex-row items-center\">\n                                        <svg class=\"mr-2 stroke-current text-indigo-700\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"30\" viewBox=\"0 0 24 24\" stroke=\"#000000\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M18 14v5a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8c0-1.1.9-2 2-2h5M15 3h6v6M10 14L20.2 3.8\"/></g></svg>\n                                        <p>\n                                            Share\n                                        </p>\n                                        </div>\n                                    </button>\n                                </CopyToClipboard>\n                                }\n                                <DeleteImageButton imageId={image.id} updateFlag={updateFlag} setUpdateFlag={setUpdateFlag}/>\n                                <DownloadImageButton imageId={image.id} withText={true}/>\n                                <button id=\"close\" onClick={handleClick} class=\"ml-2 rounded-md px-4 py-2 hover:bg-gray-300 focus:shadow-outline focus:outline-none\">\n                                    Close\n                                </button>\n                            </footer>\n                        </article>\n                        </main>\n                    </div>\n                </div>\n            }\n        </tr>\n    );\n};\n\nexport default ImageTableRow;","/home/peter/projects/image-repo/image-repo-client/src/index.js",[],["45","46"],"/home/peter/projects/image-repo/image-repo-client/src/components/Pagination.js",["47"],"import React from \"react\";\n\nconst Pagination = (props) => {\n  \n    const { offset, setOffset, limit, setLimit, imageCount } = props;\n\n    const paginationText = (imageCount !== 0) ?\n                            (imageCount > offset + limit) ? `${offset + 1} to ${offset + limit} of ${imageCount}` : `${offset + 1} to ${imageCount} of ${imageCount}`\n                            : `0 to 0 of 0`;\n\n    const handlePrevClick = () => {\n        if(offset !== 0) {\n            setOffset(offset - limit);\n        }\n    }\n\n    const handleNextClick = () => {\n        if(offset + limit < imageCount) {\n            setOffset(offset + limit);\n        }\n    }\n\n    return (\n        <div class=\"flex items-center flex-row justify-end p-2\">\n            <h3 class=\"text-s py-2 px-4 text-gray-800\">{paginationText}</h3>\n            <div class=\"flex flex-row\"> \n                <button \n                    class='bg-white text-green-400 rounded-r-none border-r-0 border-2 border-green-400 font-bold py-2 px-4 rounded hover:bg-green-500 hover:border-green-900 hover:text-green-900 focus:outline-none'\n                    onClick={handlePrevClick}\n                >\n                    Prev\n                </button>\n                <button \n                    class='bg-white text-green-400 border-2 rounded-l-none border-l-1 border-green-400 font-bold py-2 px-4 rounded hover:bg-green-500 hover:border-green-900 hover:text-green-900 focus:outline-none'\n                    onClick={handleNextClick}\n                >\n                    Next\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Pagination;","/home/peter/projects/image-repo/image-repo-client/src/components/UploadImageButton.js",["48","49","50","51"],"import React, { useState, useRef } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport ImageUploadPreview from './ImageUploadPreview';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons';\n\n\nconst UploadImageButton = (props) => {\n\n  const { uploadImages, filesToUpload } = props;\n\n  const [showModal, setShowModal] = useState(false);\n  const { user, getAccessTokenSilently } = useAuth0();\n  const [accessToken, setAccessToken] = useState(null);\n  const hiddenInput = useRef(null);\n  const [files, setFiles] = useState([]);\n\n\n  const hasFiles = ({ dataTransfer: { types = [] } }) => {\n    return types.indexOf(\"Files\") > -1\n  }\n\n  const dropHandler = (e) => {\n    e.preventDefault();\n    let newFiles = [];\n    let allowedTypes = ['jpg', 'jpeg', 'png', 'gif'];\n    for(var i = 0; i < e.dataTransfer.files.length; i++) {\n      if(allowedTypes.includes(e.dataTransfer.files[i].type.split('/')[1])) {\n        newFiles.push(e.dataTransfer.files[i]);\n      }\n    }\n    \n    setFiles([...files, ...newFiles]);\n    console.log(files);\n  }\n\n  const dragOverHandler = (e) => {\n    if (hasFiles(e)) {\n      e.preventDefault();\n    }\n  }\n\n  const handleChooseFileClick = (event) => {\n    hiddenInput.current.click();\n  }\n\n  const handleFileChange = (e) => {\n    let newFiles = [];\n    let allowedTypes = ['jpg', 'jpeg', 'png', 'gif'];\n    for(var i = 0; i < e.target.files.length; i++) {\n      if(allowedTypes.includes(e.target.files[i].type.split('/')[1])) {\n        newFiles.push(e.target.files[i]);\n      }\n    }\n    setFiles([...files, ...newFiles]);\n  }\n\n  const deleteFile = (fileName) => {\n    setFiles(files.filter((file, index, arr) => {\n      return file.name !== fileName;\n    }))\n  }\n\n  const cancelUpload = () => {\n    setShowModal(false);\n    setFiles([]);\n  }\n\n  const handleUpload = async () => {\n    setShowModal(false);\n    uploadImages(files);\n    setFiles([]);\n  }\n\n  return (\n    <div>\n      { (filesToUpload === 0) && \n      <button \n        class='bg-green-400 text-white border-2 border-green-400 font-bold py-2 px-4 rounded hover:bg-green-500 hover:border-green-900 hover:text-green-900 focus:outline-none'\n        onClick={() => setShowModal(true)}\n      >\n        Upload\n      </button>\n      }\n      { (filesToUpload > 0) && \n        <button \n          class='bg-green-500 text-white border-2 border-green-500 font-bold py-2 px-4 rounded focus:outline-none cursor-not-allowed'\n        >\n          <span class=\"mr-2\">\n            <FontAwesomeIcon icon={faCircleNotch} size='1x' spin/>\n          </span>\n          Uploading\n        </button>\n      }\n      { showModal &&\n        <div>\n          <div class=\"justify-center items-center flex overflow-x-hidden h-3/4 overflow-y-auto fixed inset-x-0 top-20 z-50 bg-gray-200 bg-opacity-60\">\n            <main class=\"container mx-auto max-w-screen-lg h-full border-2 border-gray-500 rounded-lg\">\n              <article aria-label=\"File Upload Modal\" class=\"relative h-full flex flex-col bg-white shadow-xl rounded-md\" onDrop={dropHandler} onDragOver={dragOverHandler}>\n      \n                <section class=\"h-full overflow-auto p-8 w-full h-full flex flex-col\">\n                  <header class=\"border-dashed border-2 border-gray-400 py-12 flex flex-col justify-center items-center\">\n                    <p class=\"mb-3 font-semibold text-gray-900 flex flex-wrap justify-center\">\n                      <span>Drag and drop your</span>&nbsp;<span>files anywhere or</span>\n                    </p>\n                    <input ref={hiddenInput} onChange={handleFileChange} type=\"file\" multiple class=\"hidden\" />\n                    <button onClick={handleChooseFileClick} class=\"mt-2 rounded-md px-4 py-2 bg-green-200 hover:bg-green-300 focus:shadow-outline focus:outline-none\">\n                      Select a file\n                    </button>\n                  </header>\n      \n                  <h1 class=\"pt-8 pb-3 font-semibold sm:text-lg text-gray-900\">\n                    To Upload\n                  </h1>\n      \n                  <ul class=\"flex flex-1 flex-wrap -m-1\">\n                    { !files &&\n                      <li id=\"empty\" class=\"h-full w-full text-center flex flex-col items-center justify-center items-center\">\n                        <img class=\"mx-auto w-32\" src=\"https://user-images.githubusercontent.com/507615/54591670-ac0a0180-4a65-11e9-846c-e55ffce0fe7b.png\" alt=\"no data\" />\n                        <span class=\"text-small text-gray-500\">No files selected</span>\n                      </li>\n                    }\n                    { files && files.map(file => {\n                        return <ImageUploadPreview file={file} deleteFile={deleteFile}></ImageUploadPreview>;\n                    })}\n                  </ul>\n                </section>\n      \n                <footer class=\"flex justify-end px-8 pb-8 pt-4\">\n                  <button onClick={handleUpload} class=\"rounded-md px-4 py-2 bg-green-400 hover:bg-green-700 text-white focus:shadow-outline focus:outline-none\">\n                    Upload Now\n                  </button>\n                  <button onClick={cancelUpload} class=\"ml-3 rounded-md px-4 py-2 hover:bg-gray-300 focus:shadow-outline focus:outline-none\">\n                    Cancel\n                  </button>\n                </footer>\n              </article>\n            </main>\n          </div>\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default UploadImageButton;","/home/peter/projects/image-repo/image-repo-client/src/components/LogoutButton.js",[],"/home/peter/projects/image-repo/image-repo-client/src/components/Dashboard.js",["52","53","54","55","56","57"],"/home/peter/projects/image-repo/image-repo-client/src/components/DeleteImageButton.js",[],"/home/peter/projects/image-repo/image-repo-client/src/components/DownloadImageButton.js",[],"/home/peter/projects/image-repo/image-repo-client/src/components/DeleteManyImageButton.js",[],{"ruleId":"58","severity":1,"message":"59","line":6,"column":8,"nodeType":"60","messageId":"61","endLine":6,"endColumn":25},{"ruleId":"58","severity":1,"message":"62","line":17,"column":12,"nodeType":"60","messageId":"61","endLine":17,"endColumn":31},{"ruleId":"63","severity":1,"message":"64","line":21,"column":8,"nodeType":"65","endLine":21,"endColumn":23,"suggestions":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"58","severity":1,"message":"71","line":5,"column":39,"nodeType":"60","messageId":"61","endLine":5,"endColumn":47},{"ruleId":"58","severity":1,"message":"72","line":13,"column":11,"nodeType":"60","messageId":"61","endLine":13,"endColumn":15},{"ruleId":"58","severity":1,"message":"73","line":13,"column":17,"nodeType":"60","messageId":"61","endLine":13,"endColumn":39},{"ruleId":"58","severity":1,"message":"74","line":14,"column":10,"nodeType":"60","messageId":"61","endLine":14,"endColumn":21},{"ruleId":"58","severity":1,"message":"75","line":14,"column":23,"nodeType":"60","messageId":"61","endLine":14,"endColumn":37},{"ruleId":"58","severity":1,"message":"76","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":15},{"ruleId":"58","severity":1,"message":"77","line":13,"column":19,"nodeType":"60","messageId":"61","endLine":13,"endColumn":28},{"ruleId":"58","severity":1,"message":"78","line":15,"column":12,"nodeType":"60","messageId":"61","endLine":15,"endColumn":26},{"ruleId":"58","severity":1,"message":"79","line":15,"column":28,"nodeType":"60","messageId":"61","endLine":15,"endColumn":45},{"ruleId":"58","severity":1,"message":"71","line":19,"column":19,"nodeType":"60","messageId":"61","endLine":19,"endColumn":27},{"ruleId":"63","severity":1,"message":"80","line":54,"column":10,"nodeType":"65","endLine":54,"endColumn":58,"suggestions":"81"},"no-unused-vars","'MoreOptionsButton' is defined but never used.","Identifier","unusedVar","'updatingPermissions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getImagePreview'. Either include it or remove the dependency array.","ArrayExpression",["82"],"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"'setLimit' is assigned a value but never used.","'user' is assigned a value but never used.","'getAccessTokenSilently' is assigned a value but never used.","'accessToken' is assigned a value but never used.","'setAccessToken' is assigned a value but never used.","'Loading' is defined but never used.","'isLoading' is assigned a value but never used.","'uploadProgress' is assigned a value but never used.","'setUploadProgress' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAccessTokenSilently'. Either include it or remove the dependency array.",["85"],{"desc":"86","fix":"87"},"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [getImagePreview, image.private]",{"range":"90","text":"91"},"Update the dependencies array to be: [updateFlag, uploadedFiles, user, limit, offset, getAccessTokenSilently]",{"range":"92","text":"93"},[805,820],"[getImagePreview, image.private]",[1866,1914],"[updateFlag, uploadedFiles, user, limit, offset, getAccessTokenSilently]"]